# Nova (Compute Service)

- name: installing the packages
  shell:
    sudo apt install -y nova-api nova-conductor nova-novncproxy nova-scheduler

- name: configuring api_database from nova.conf
  lineinfile:
    path: /etc/nova/nova.conf
    state: present
    regexp: 'connection = sqlite:////var/lib/nova/nova_api.sqlite'
    line: 'connection = mysql+pymysql://nova:NOVA_DBPASS@controller/nova_api'

- name: configuring database from nova.conf
  lineinfile:
    path: /etc/nova/nova.conf
    state: present
    regexp: 'connection = sqlite:////var/lib/nova/nova.sqlite'
    line: 'connection = mysql+pymysql://nova:NOVA_DBPASS@controller/nova'

- name: configuring RabbitMQ message queue access from nova.conf
  lineinfile:
    path: /etc/nova/nova.conf
    state: present
    regexp: '#transport_url = rabbit://openstack:RABBIT_PASS@controller:5672/'
    line: 'transport_url = rabbit://openstack:RABBIT_PASS@controller:5672/'

- name: configuring api from nova.conf
  lineinfile:
    path: /etc/nova/nova.conf
    state: present
    regexp: '#auth_strategy = keystone'
    line: 'auth_strategy = keystone'

- name: configuring keystone_authtoken from nova.conf
  lineinfile:
    path: /etc/nova/nova.conf
    state: present
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
  with_items:
  - { regexp: '#www_authenticate_uri = <none>', line: 'www_authenticate_uri = http://controller:5000/'}
  - { regexp: '#auth_url = <none>', line: 'http://controller:5000/'}
  - { regexp: '#memcached_servers = <none>', line: 'memcached_servers = controlller:11211'}
  - { regexp: '#auth_type = <none>', line: 'auth_type = password'}
  - { regexp: '#project_domain_name = <none>', line: 'project_domain_name = Default'}
  - { regexp: '#user_domain_name = <none>', line: 'user_domain_name = Default'}
  - { regexp: '#project_name = <none>', line: 'project_name = service'}
  - { regexp: '#username = <none>', line: 'username = nova'}
  - { regexp: '#password = <none>', line: 'password = NOVA_PASS'}

- name: configuring vnc from nova.conf
  lineinfile:
    path: /etc/nova/nova.conf
    state: present
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
  with_items:
  - { regexp: '#enabled = true', line: 'enabled = true'}
  - { regexp: '#server_listen = 127.0.0.1', line: 'server_listen = $my_ip'}
  - { regexp: '#server_proxyclient_address = 127.0.0.1', line: 'server_proxyclient_address = $my_ip'}

- name: configuring glance from nova.conf
  lineinfile:
    path: /etc/nova/nova.conf
    state: present
    regexp: '#api_servers = <None>'
    line: 'api_servers = http://controller:9292'

- name: configuring oslo_concurrency from nova.conf
  lineinfile:
    path: /etc/nova/nova.conf
    state: present
    regexp: '#lock_path = <None>'
    line: 'lock_path = /var/lib/nova/tmp'

- name: configuring placement from nova.conf
  lineinfile:
    path: /etc/nova/nova.conf
    state: present
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
  with_items:
  - { regexp: '#region_name = <none>', line: 'region_name = RegionOne'}
  - { regexp: '#project_domain_name = <none>', line: 'project_domain_name = Default'}
  - { regexp: '#project_name = <none>', line: 'project_name = service'}
  - { regexp: '#auth_type = <none>', line: 'auth_type = password'}
  - { regexp: '#user_domain_name = <none>', line: 'user_domain_name = Default'}
  - { regexp: '#auth_url = <none>', line: 'auth_url = http://controller:5000/v3'}
  - { regexp: '#username = <none>', line: 'username = placement'}
  - { regexp: '#password = <none>', line: 'password = PLACEMENT_PASS'}

- name: populating nova-api database
  shell:
    sudo su -s /bin/sh -c "nova-manage api_db sync" nova
  failed_when: false
  no_log: True

- name: registering cell0 database
  shell:
    sudo su -s /bin/sh -c "nova-manage cell_v2 map_cell0" nova
  failed_when: false
  no_log: True

- name: registering cell1 cell
  shell:
    sudo su -s /bin/sh -c "nova-manage cell_v2 create_cell --name=cell1 --verbose" nova
  failed_when: false
  no_log: True

- name: populating nova database
  shell:
    sudo su -s /bin/sh -c "nova-manage db sync" nova
  failed_when: false
  no_log: True

- name: verifying nova cell0 and cell1 registration
  shell:
    sudo su -s /bin/sh -c "nova-manage cell_v2 list_cells" nova
  failed_when: false
  no_log: True

- name: restarting nova-api service
  service:
    name: nova-api
    state: restarted

- name: restarting nova-scheduler service
  service:
    name: nova-scheduler
    state: restarted

- name: restarting nova-conductor service
  service:
    name: nova-conductor
    state: restarted

- name: restarting nova-novncproxy service
  service:
    name: nova-novncproxy
    state: restarted
